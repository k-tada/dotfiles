# プリフィックスを Ctrl + g に変更する
set -g prefix C-g
unbind-key C-b
bind-key C-g send-prefix

# Escをプロセスに渡す時間を 0 ms にする
set -g escape-time 0

# ウィンドウのインデックスを1から始める
set -g base-index 1

# ウィンドウのインデックスのリナンバーを有効にする
set -g renumber-windows on

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# マウス操作を有効にする
set -g mouse on

# マウススクロールで画面をスクロールする
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# 256色端末を使用する
set -g default-terminal "screen-256color"
set -sa terminal-overrides ',xterm:RGB'
set-option -sa terminal-features ',alacritty:RGB'

# ステータスバーの色を設定する
set -g status-fg white
set -g status-bg black

# ウィンドウリストの色を設定する
setw -g window-status-activity-style bg=default,dim,fg=cyan
# アクティブなウィンドウを目立たせる
setw -g window-status-current-style bg=red,bright,fg=white

# ペインボーダーの色を設定する
set -g pane-border-style fg=green,bg=black
# アクティブなペインを目立たせる
set -g pane-active-border-style fg=white,bg=yellow

# コマンドラインの色を設定する
set -g message-style bg=black,bright,fg=white

# ステータスバーを設定する
## 左パネルを設定する
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
## 右パネルを設定する
set -g status-right "#[fg=cyan][%Y-%m-%d(%a) %H:%M]"
## リフレッシュの間隔を設定する(デフォルト 15秒)
set -g status-interval 60
## ウィンドウリストの位置を中心寄せにする
set -g status-justify centre
## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on
## ステータスバーを上部に表示する
set -g status-position top

# コピーモードを設定する
## viのキーバインドを使用する
setw -g mode-keys vi
## クリップボード共有を有効にする
set-option -g default-command "reattach-to-user-namespace -l zsh"
# マウスで範囲選択終了時にcopy-modeを終了しない
unbind -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# ペイン分割
## 垂直分割 + カレントディレクトリを引き継ぐ
bind % split-window -h -c "#{pane_current_path}"
## 水平分割 + カレントディレクトリを引き継ぐ
bind '"' split-window -v -c "#{pane_current_path}"
 # ウィンドウ作成時にカレントディレクトリを引き継ぐ
bind-key -T prefix c new-window -c "#{pane_current_path}"

bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display-message "Config reloaded..."

# だいたい7:3〜8:2ぐらいの割合で分割する
bind - source-file $XDG_CONFIG_HOME/tmux/macros/my_vertical_sprit
bind | source-file $XDG_CONFIG_HOME/tmux/macros/my_horizontal_sprit

# ペインサイズ変更
bind u resize-pane -U 5
bind d resize-pane -D 5
bind M-up    resize-pane -U 5
bind M-down  resize-pane -D 5
bind M-Left  resize-pane -L 5
bind M-Right resize-pane -R 5

###
# Tmux Plugin Manager

set-environment -g TMUX_PLUGIN_MANAGER_PATH "$XDG_CACHE_HOME/tmux/plugins/"

# auto install Tmux Plugin Manager and the plugins
if "test ! -d $XDG_CACHE_HOME/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm $XDG_CACHE_HOME/tmux/plugins/tpm && $XDG_CACHE_HOME/tmux/plugins/tpm/bin/install_plugins'"

# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# select & yank
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'

# install tmux plugin manager
run '$XDG_CACHE_HOME/tmux/plugins/tpm/tpm'
